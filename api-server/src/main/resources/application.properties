# hibernate
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Set here configurations for the database connection


spring.datasource.driver-class-name=org.postgresql.Driver

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
## PostgreSQL
spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://localhost:5432/latihan
spring.datasource.username=andi
spring.datasource.password=humorismenalws06



# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

#
#spring.datasource.test-on-borrow=true
#spring.datasource.validation-interval=30000

#server.port=9090
#spring.jpa.database=POSTGRESQL
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/latihan
#spring.datasource.username=andi
#spring.datasource.password=humorismenalws06
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
